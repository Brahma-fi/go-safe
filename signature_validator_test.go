// TODO these data should be in a csv file in testdata package
/*
 msg                            privatekey                                                wallet address                                                                        signed message
"msg1", "fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19", 0x16A798262b8f77AF783a3681BB497d4CD73EBb0A, 0x835529e4c546e3cd906052cbe2fda65a012d104d0472fd2f2a0dc75f22a5e2737fc70c806344d48948b69339854041ab469d8825ee91491948dcf58204d613ff01
"msg1", "c44dcf609dd74a08a39a2d1efb3cb31936f9908e47af2aa6841d9813d4910c82", 0xFe88Cfff1550422eae08120361e49F73dc9D98DE, 0x2a6c03eec7e00bfdd522c3c9c4f273a1e8d2c0bb27d1b6b87f73c1ec7aeb7eaf46c2b743b22fcfd96922b729b0ea5354ecb7763cffcb863b5c90382fa5a707c001
"msg1", "a665fa64c01b9b2396dc8e994c214e798ebcfb6e9442a1bf98c31b35dbf307c7", 0xB5ea4AF24352958859B7888b1ff4c009f20197bf, 0x67effac14347ef8ad3eeb52d7cb62a03237ac675704ff5fd9906c48871fa947f1fd1350c3af6495a71bf50aca315b29449419b9b67aa3d5c4675405a3a97b5c300
"msg1", "98691e94a65a30a24f1d2dc013a5508e7bbd69783c9f7fbb0a8e77f951b1f3d3", 0x9B6035AfF23de6d9be9b5D4EbAaf5C00C0A4bc18, 0x851db31054e9fc51cd9f9f6b1c733b1fa21e72d564ea944eae5120fcbe8257c9023116013682a35f8a9716c1af695964f372ca13d72afc721fbe87d2197d9bcc01
"msg1", "6f8c7d082fbfae28aa9b5d73b8f1ecb14fa71d699648ea3e63e8c32d2fb40b3f", 0xc6eeBfB8eBd2DE7170a2CA57e6Bd4BF9Bad0F003, 0xb21fb57697a8325d4b46f90ef0139a87e5c2dbc322e760755e744cf6ae35cc4c5438c5b01bfadaaa10a38c2851347ef0e29c967b8b0417b92eff93c1c6d8791300
"msg1", "5ba5cafe4a0e890215942cc4a4f4d4c726b06dc4a9f8eab6c5705066d1df05b5", 0x7212F8E308980f9584C061F1638302fd103d4E42, 0x7e085326f07253a4e0ad00e2e3d3dc21d8ee55e810d2d8dc68f7a18a54db3846563dda26d1a24d3b94c17917149ab9558eb23aaafcc27f31a1b591dc6c882d9901
"msg1", "bc239e1a2c144f7fb0d6b8edf90ed3e3d3c78e2f8c70d40830b0e07d9d19e6b1", 0x33F35Dc76EE1617A35a9513d92886989Fba19d82, 0x9d8477f1cef29ebd1de90092fa3a0aed12cc91db6a259c15a8e26ba42cf6bc3e1124e2798a99ebce42d915761cdd8235943d76bcb0dc9c1b273c5b2de68c632201
"msg1", "fd0a14be383da46597ed8f06d29b900fd3cb9b785eb2d13b2085f1b2d04c5a5d", 0x157260CE05ec8D781596ac314D1a12e93c2223BB, 0x54751ac29b7b9f05c224591ec68026cc196791d5ae80263abe6ab8d934c28d6c77e8f4fb86fcf9d6f7420f112e3f4d5fbec94d1f0d8bef3ed1aa869f68c3e4f901
"msg1", "2494c4cf18b520f4bde5b8cc994cd1f2c891cc6a617d235df3ce3d3dd6a3c407", 0x0Ed67Fc5dF022887c0f3513b3B84d6856f57ef0d, 0x6dc24252cdbd7f96568dcbb1502389b7098c508abb19eacdaf6f6390e73048c162bd0a0fd887ae9602757bf569a66905f86fd621d094fa6800c0d2dbdfef0b2700
"msg1", "012156f6a8da1c9e6d703af1a37d6b8a2b92fc6b15e6e5761311e7178b0ee9b7", 0xb4dF700a120BF95A41204C638bA3aB584c337D50, 0xe89c90aeebf80fed363dd47601ec78a7ccc52c692a19f00ac4d08f9b7380b260500b1753c12ac449e76c2e9dcedf49d9282d1feea414cb4fb70be1070719694201
"msg1", "34a325b4a4b4f5b731a1db1201436857be8f2d0cc73e647ccf5c15f17dc5a5c1", 0x3836d93f20C1453E2a943107EBA54051f2e5fD56, 0xd0a93f67671f1b3b87fe5ea5dc47d7380550456c85405863fe78450cfb529ce77460ad95abd597c5f29273518ccc5cb4e1389fd424dc8da28538281b852e872a00

"msg0", "fad9c8855b740a0b7ed4c221dbad0f33a83a49cad6b3fe8d5817ac83d38b6a19", 0x3755Fd804bed67f237DA73554E077a0Ab254127d, 0x54984bb7d455486746db8ad41a16feb4f5f9c435d4a9e7c6887853a7b7899103123a4c35c8f071a96966ff000ce5809fc8cf0a2614c8437ec3854df29af4880301
"msg1", "c44dcf609dd74a08a39a2d1efb3cb31936f9908e47af2aa6841d9813d4910c82", 0xFe88Cfff1550422eae08120361e49F73dc9D98DE, 0x2a6c03eec7e00bfdd522c3c9c4f273a1e8d2c0bb27d1b6b87f73c1ec7aeb7eaf46c2b743b22fcfd96922b729b0ea5354ecb7763cffcb863b5c90382fa5a707c001
"msg2", "a665fa64c01b9b2396dc8e994c214e798ebcfb6e9442a1bf98c31b35dbf307c7", 0xc5CECA0e1f23E05363c2307a359d26F6E6573eD1, 0xf6598cc74c8a45a5750f8ce4ef96711c8a8ba4ee07528a130755886a434851da3c387264b5ae748fb63c0f184123bf3f8e8f688b9111ec51505ea435c09c5b2901
"msg3", "98691e94a65a30a24f1d2dc013a5508e7bbd69783c9f7fbb0a8e77f951b1f3d3", 0x6feFBf00BdD095A8EfFb0640f3630C4F39fC89aD, 0x74ba53d5835d5efbed9814b5a8717a882706d4d85b6058ecd6b368303ed4bbac5f65a4c344d9d2c967afb99b588d6bf61ca5e3d61a4aa5f2657e1f0ea678043901
"msg4", "6f8c7d082fbfae28aa9b5d73b8f1ecb14fa71d699648ea3e63e8c32d2fb40b3f", 0xCBD62268989D1F512bAbb25B575e578cF01D1d9e, 0x933a67260eaea3df4406b3be340bdd10a303ed18e656052d0c6b5fadd30df2b47f36f5049dc0b6c92c6b77a2e3df6925339d823e5932430bfe4e87403c1fdc9100
"msg5", "5ba5cafe4a0e890215942cc4a4f4d4c726b06dc4a9f8eab6c5705066d1df05b5", 0x4C67335AFaF20106F2dDd61c077121553D1e08A3, 0x09c5817396d5b151223cda03afe26bd4e0e9b89cf68d1d4f78df6c9fd40c17a804c6570724b0622c068b51be217f6aafc936f6b9ebf0ad3c6e5e5c67fc1cd38001
"msg6", "bc239e1a2c144f7fb0d6b8edf90ed3e3d3c78e2f8c70d40830b0e07d9d19e6b1", 0xD32cC971ae61CeF1e071beE96872eA1f3df077Bd, 0xde138d503a57f32a7cc88c33f8e011718aca16bce086440fa14082d25b47040357812184bd4b026eb5b24dbd3d8ab988723b702ae5d90bf76ea05f8f2581bfdf00
"msg7", "fd0a14be383da46597ed8f06d29b900fd3cb9b785eb2d13b2085f1b2d04c5a5d", 0x8D829e85E173981540d603886eD9d3D1D491048d, 0x9918e4ac4fc7a6a49a24f8671366e5d1110b144ebcd8eda9a7e38d113c056aac40ed8795fa057f693ed6efc8890792e0c234fb51fc030c6bac3d4e584cc7766a01
"msg8", "2494c4cf18b520f4bde5b8cc994cd1f2c891cc6a617d235df3ce3d3dd6a3c407", 0x6cE0C5985DE15bF9Cd4e0Cac949547E2b2EBf4C8, 0x2f48aad8f28897968a37bc8f5c660ddae051a9b952334665f9987a74458d211c20357db26677e810426758c2208fa4592ded0b7cbbc16628c98aeedf0b50b27d00
"msg9", "012156f6a8da1c9e6d703af1a37d6b8a2b92fc6b15e6e5761311e7178b0ee9b7", 0x1375Ecf2758E0EE3a9f11C7e2C31f3587F83B0a7, 0x4432295a7be317f357b833aaa1f1c3073409875719df71bd9ba26e8bd68fb996007b27a8a4716d03be999ad1153550d49dba9fbe70962432ed08f956759167d001
"msg10", "34a325b4a4b4f5b731a1db1201436857be8f2d0cc73e647ccf5c15f17dc5a5c1", 0x38fD53C4f88a6292f6A1D9a009065C0c5773881, 0x069b0889cfcc5a63cf5f7f3346c3d50bd4cc06a9ee542376d146a7694f422d8648505b14769790f53c14be7c73af378eb7aaa79ef2b1c1e06d5d044383440ee301
*/

package safe

import (
	"testing"

	"github.com/ethereum/go-ethereum/accounts"
	"github.com/rs/zerolog/log"
)

func TestGetPublicKeyAndCheckWalletAddress(t *testing.T) {
	var hashedText = accounts.TextHash([]byte("msg1"))
	var sig, _ = getSignature("0x835529e4c546e3cd906052cbe2fda65a012d104d0472fd2f2a0dc75f22a5e2737fc70c806344d48948b69339854041ab469d8825ee91491948dcf58204d613ff01")

	hashedText = append(hashedText, []byte("A")...)
	var _, err = getPublicKeyAndCheckWalletAddress(hashedText, sig, "any")
	if err == nil {
		log.Error().Err(err).Msg("failed to get public key")
		t.Error("TestGetPublicKeyAndCheckWalletAddress() error == nil and it should fail")
	}
}

func TestCheckSignature(t *testing.T) {
	var hashedText = accounts.TextHash([]byte("msg1"))
	var sig, _ = getSignature("0x835529e4c546e3cd906052cbe2fda65a012d104d0472fd2f2a0dc75f22a5e2737fc70c806344d48948b69339854041ab469d8825ee91491948dcf58204d613ff01")
	var sigPublicKey, _ = getPublicKeyAndCheckWalletAddress(hashedText, sig, "0x16A798262b8f77AF783a3681BB497d4CD73EBb0A")

	hashedText = append(hashedText, []byte("A")...)
	var err = checkSignature(sigPublicKey, hashedText, sig)
	if err == nil {
		log.Error().Err(err).Msg("failed to get public key")
		t.Error("TestcheckSignature() error == nil and it should fail")
	}
}
